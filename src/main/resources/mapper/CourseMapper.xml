<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.ac.kr.academy.mapper.course.CourseMapper">
    <resultMap id="CourseListResponseMap" type="com.ac.kr.academy.dto.course.CourseListResponseDTO">
        <id property="courseId" column="course_id"/>
        <result property="place" column="place"/>
        <result property="dayOfWeek" column="day_of_week"/>
        <result property="capacity" column="capacity"/>
        <result property="status" column="status"/>
        <result property="time" column="time"/>

        <association property="subject" javaType="com.ac.kr.academy.domain.subject.Subject">
            <id property="id" column="subject_id"/>
            <result property="name" column="subject_name"/>
            <result property="credit" column="credit"/>
        </association>

        <association property="professor" javaType="com.ac.kr.academy.domain.professor.Professor">
            <id property="id" column="professor_id"/>
            <result property="professorNum" column="professor_num"/>
        </association>

        <association property="semester" javaType="com.ac.kr.academy.domain.semester.Semester">
            <id property="id" column="semester_id"/>
            <result property="name" column="semester_name"/>
            <result property="year" column="semester_year"/>
        </association>
        
        <association property="dept" javaType="com.ac.kr.academy.domain.dept.Dept">
            <id property="id" column="dept_id"/>
            <result property="deptName" column="dept_name"/>
        </association>
    </resultMap>

    <!-- 강의 개설 -->
    <insert id="insert">
        <selectKey keyProperty="id" order="BEFORE" resultType="long">
            SELECT course_seq.NEXTVAL FROM dual
        </selectKey>
        INSERT INTO course (
        id, professor_id, subject_id, semester_id, capacity, day_of_week, place, status, time
        )
        VALUES (
        #{id}, #{professorId}, #{subjectId}, #{semesterId}, #{capacity}, #{dayOfWeek}, #{place}, #{status}, #{time}
        )
    </insert>

    <!-- 중복 방지를 위한 -->
    <select id="existsByDayOfWeekAndPlaceAndTime" resultType="boolean">
        SELECT COUNT(*) > 0
        FROM course
        WHERE day_of_week = #{dayOfWeek} AND place = #{place} AND time = #{time}
    </select>

    <!-- 강의 목록 조회 -->
    <select id="findAll" resultMap="CourseListResponseMap">
        SELECT
            c.id AS course_id, c.place, c.day_of_week, c.capacity, c.status,
            s.id AS subject_id, s.name AS subject_name, s.credit, s.description AS subject_description,
            p.id AS professor_id, p.professor_num,
            sem.id AS semester_id, sem.name AS semester_name, sem.year AS semester_year,
            d.id AS dept_id, d.dept_name
        FROM course c
        JOIN subject s ON c.subject_id = s.id
        JOIN professor p ON c.professor_id = p.id
        JOIN semester sem ON c.semester_id = sem.id
        JOIN dept d ON s.dept_id = d.id
        <where>
            <if test="keyword != null and keyword != ''">
                s.name LIKE '%' || #{keyword} || '%'
                OR d.dept_name LIKE '%' || #{keyword} || '%'
            </if>
        </where>
        ORDER BY c.id DESC
    </select>

    <!-- 과목명으로 강의 조회 -->
    <select id="findAllBySubjectName" resultMap="CourseListResponseMap">
        SELECT
            c.id AS course_id, c.place, c.day_of_week, c.capacity, c.status,
            s.id AS subject_id, s.name AS subject_name, s.credit, s.description AS subject_description,
            p.id AS professor_id, p.professor_num,
            sem.id AS semester_id, sem.name AS semester_name, sem.year AS semester_year,
            d.id AS dept_id, d.dept_name
        FROM course c
                 JOIN subject s ON c.subject_id = s.id
                 JOIN professor p ON c.professor_id = p.id
                 JOIN semester sem ON c.semester_id = sem.id
                 JOIN dept d ON s.dept_id = d.id
        <where>
            <if test="keyword != null and keyword != ''">
                s.name LIKE '%' || #{keyword} || '%'
            </if>
        </where>
        ORDER BY c.id DESC
    </select>

    <!-- 학과명으로 강의 조회-->
    <select id="findAllByDeptName" resultMap="CourseListResponseMap">
        SELECT
            c.id AS course_id, c.place, c.day_of_week, c.capacity, c.status,
            s.id AS subject_id, s.name AS subject_name, s.credit, s.description AS subject_description,
            p.id AS professor_id, p.professor_num,
            sem.id AS semester_id, sem.name AS semester_name, sem.year AS semester_year,
            d.id AS dept_id, d.dept_name
        FROM course c
                 JOIN subject s ON c.subject_id = s.id
                 JOIN professor p ON c.professor_id = p.id
                 JOIN semester sem ON c.semester_id = sem.id
                 JOIN dept d ON s.dept_id = d.id
        <where>
            <if test="keyword != null and keyword != ''">
                d.dept_name LIKE '%' || #{keyword} || '%'
            </if>
        </where>
        ORDER BY c.id DESC
    </select>

    <!-- 강의 수정 -->
    <update id="update">
        UPDATE course
        <set>
            <if test="capacity != null">capacity = #{capacity},</if>
            <if test="dayOfWeek != null">day_of_week = #{dayOfWeek},</if>
            <if test="place != null">place = #{place},</if>
            <if test="status != null">status = #{status},</if>
            <if test="time != null">time = #{time},</if>
            <if test="professorId != null">professor_id = #{professorId},</if>
            <if test="semesterId != null">semester_id = #{semesterId},</if>
        </set>
        WHERE id = #{id}
    </update>

    <update id="updateNumOfStudent">
        UPDATE course
        SET num_of_student = num_of_student + #{numOfStudent}
        WHERE id = #{id}
    </update>

    <select id="findCreditByCourseId" resultType="int">
        SELECT s.credit
        FROM course c
        JOIN subject s ON c.subject_id = s.id
        WHERE c.id = #{courseId}
    </select>

    <!-- 강의 삭제 -->
    <delete id="delete">
        DELETE FROM course WHERE id = #{id}
    </delete>
</mapper>
